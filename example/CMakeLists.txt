find_package(Boost REQUIRED COMPONENTS program_options)

link_libraries(Boost::thread rt stdc++fs)

add_executable(limit_single_instance limit_single_instance.cpp)
add_executable(limit_single_instance_boost_interprocess_named_mutex limit_single_instance_boost_interprocess_named_mutex.cpp)
add_executable(limit_single_instance_callback limit_single_instance_callback.cpp)
add_executable(limit_single_instance_callback_with_global_context limit_single_instance_callback_with_global_context.cpp)
add_executable(my_own_termination_handler my_own_termination_handler.cpp)
add_executable(my_own_wait_for_termination_request my_own_wait_for_termination_request.cpp)
add_executable(myexception myexception.cpp)
add_executable(path path.cpp)
add_executable(pid pid.cpp)
add_executable(handling_errors_ex_version handling_errors_ex_version.cpp)
add_executable(handling_errors_ec_version handling_errors_ec_version.cpp)
add_executable(application_mode_select application_mode_select.cpp)
add_executable(simple_application simple_application.cpp)
add_executable(simple_application_with_global_context simple_application_with_global_context.cpp)
add_executable(simple_server_application simple_server_application.cpp)
add_executable(simple_server_application_help simple_server_application_help.cpp)
add_executable(simple_server_application_with_auto_handler simple_server_application_with_auto_handler.cpp)
add_executable(simple_server_application_with_auto_handler_and_global_context simple_server_application_with_auto_handler_and_global_context.cpp)
add_executable(termination_handler termination_handler.cpp)
add_executable(termination_handler_with_global_context termination_handler_with_global_context.cpp)
add_executable(wait_for_termination_request wait_for_termination_request.cpp)

target_link_libraries(application_mode_select PRIVATE Boost::program_options)

add_subdirectory(selfpipe)
add_subdirectory(tutorial)
add_subdirectory(work_queue)
